<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Personal Site</title>
    <link>/post/</link>
    <description>Recent content in Posts on Personal Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Wed, 23 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible</title>
      <link>/post/devops/ansible/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/devops/ansible/</guid>
      <description>Install $ sudo apt-get install python-pip python-yaml python-jinja2 python-paramiko -y $ sudo pip install ansible $ python --version Python 2.7.3 $ ansible --version ansible 2.1.1.0  Отработка скрипта пишет в:
$ sudo less -f /var/log/syslog	 Прямой вызов команд:
$ ansible localhost -m command -a &amp;quot;python --version&amp;quot; $ ansible localhost -m shell -a &amp;quot;ps -axf | grep firefox&amp;quot; $ ansible localhost -m shell -a &amp;quot;ps -eo pcpu,user,args | sort -r -k1 | head -n5&amp;quot; $ ansible host-file-with-ip -m ping  Документация:</description>
    </item>
    
    <item>
      <title>Conda как отличная замена Pip</title>
      <link>/post/ml/conda/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ml/conda/</guid>
      <description>Conda документация
Pip - стандартный менеджер пакетов питона, позволяет устанавливать бинарные wheel сборки пакетов. Если их нет (ни в самом Pip, ни где-то еще), Pip компилирует пакеты локально. При этом могут возникнуть проблемы при сложных зависимостях, когда требуются сторонние не питон библиотеки. В этом случае удобно использовать Conda.
Команды Pip: - pip search package_name - поиск пакета через pip - pip install package_name - установка пакета через pip
Conda - менеджер пакетов питона, позволяет устанавливать уже скомпилированные пакеты (может работать и в режиме компиляции пакетов перед установкой).</description>
    </item>
    
    <item>
      <title>YAML</title>
      <link>/post/devops/yaml/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/devops/yaml/</guid>
      <description>YAML с версии 1.2 - это надмножество JSON. - все, что правильно для JSON, годится и для YAML. - По сути yaml - это расширение json. Или json подмножество yaml :) - удобно писать конфиги, которые конвертятся в json
multiliners: ugly_multiline: &amp;quot;ugly\nugly\nugly\nugly\n&amp;quot; multiline_with_line_ending: | multiline text with ending multiline_without_line_ending: |- multiline text without ending  commands: - do something with --a long --list of --parameters - do something with --a long --list of --parameters  singleliners: simple: single line text single-line-text: &amp;gt;- single line text single-line-text-with-line-ending: &amp;gt; single line text  inheritance: _basic: &amp;amp;basic cpu: 2 ram: 2 disk: 10 os: rhel6 vm-profiles: small: &amp;lt;&amp;lt;: *basic cpu: 1 large: &amp;lt;&amp;lt;: *basic cpu: 4  inheritance: _basic: &amp;amp;basic cpu: 2 ram: 2 disk: 10 os: rhel6 vm-profiles: small: {&amp;lt;&amp;lt;: *basic, cpu: 1} large: {&amp;lt;&amp;lt;: *basic, cpu: 4}  элементы &amp;amp; и * позволяют определить ссылку на элемент и затем его использовать.</description>
    </item>
    
    <item>
      <title>Горячие клавиши Mac OS X</title>
      <link>/post/devops/osx-key/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/devops/osx-key/</guid>
      <description>Клавиатура со своими особенностями и обозначениями: - Command (или Cmd) ⌘ - Shift ⇧ - Option (или Alt) ⌥ - Control (или Ctrl) ⌃ - Caps Lock ⇪ - Fn
Клавиатура [Fn-ноут] [Control-Ctrl] [Option-Alt] [Command-Cmd] [---] [Command-Cmd] [Option-Alt] Windows [Ctrl] [Win] [Alt] [---] [Alt] [Fn] [Ctrl]  Работа с системой - комбинации клавиш - Открыть Launchpad со списком установленных программ надо нажать F4 Открыть Finder (аналог проводника) надо несколько раз нажать Alt + Tab для переключения между окнами Скриншот Command + Shift +3 - Скриншот области Command + Shift + 4 и выделить область - Выделить все Command + A Скопировать Command + С Вырезать Command + X Вставить Command + V - Переходы Command + стрелка вверх для перехода в начало, и Command + стрелка вниз — в конец Переименовать файл F2/либо Return Отменить действие Command + Z Запустить поиск Command + F Закрыть активное окно Command + W - Новая вкладка Command + T Между приложениями Command + Tab и перемещайтесь между стрелками влево-вправо Параметры приложения Command + &amp;lt; Поиск помощи Command + Shift + ?</description>
    </item>
    
    <item>
      <title>Jupyter in Hugo</title>
      <link>/post/python/hugo-ipynb/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/python/hugo-ipynb/</guid>
      <description>Добавляем возможность интеграции Jupyter файлов, как статических данных
Попробовал следующий варинт:
$ pip install hugo_jupyter  досталяется достаточно много модулей
$ cd root_of_hugo_project $ hugo_jupyter --init   Запускаем Jupyter notebook Создаем новый файл название меняем на необходимое Edit - Edit Notebook Metadata Добавляем следующий заголовок  &amp;quot;front-matter&amp;quot;:{ &amp;quot;date&amp;quot;:&amp;quot;2019-01-03&amp;quot;, &amp;quot;subtitle&amp;quot;: &amp;quot;Add Jupyter print&amp;quot;, &amp;quot;title&amp;quot;: &amp;quot;Jupyter Hugo&amp;quot; }, &amp;quot;hugo_jupyter&amp;quot;: { &amp;quot;render-to&amp;quot;: &amp;quot;/path/to/blog/content&amp;quot; }  сохраняем должен появится файл с расширением md  НО не выходит, не создается и что просходит пока не ясно</description>
    </item>
    
    <item>
      <title>VSCode</title>
      <link>/post/devops/vscode/</link>
      <pubDate>Thu, 13 Dec 2018 23:27:56 +0300</pubDate>
      
      <guid>/post/devops/vscode/</guid>
      <description>Работал я с различными IDE. На мой взгляд, лучшей для разработки была среда Delphi. Так 3-я вресия работала прекрасно на 8 Мбайтах. С трассировщиком отладки, с брекпоинтами, с компонентами и редактором форм.
Eclips - тормознутый был с самого начала и бестолковый по окнам настройки.
Notepad++ - шведский нож, работать можно с кучей форматов, но при этом не так до IDE разработки ой как далеко.
Sublime - отличный блокнот - притом крос-платформенный и уже с кучей дополнительных модулей.</description>
    </item>
    
    <item>
      <title>Hugo on GitHub</title>
      <link>/post/golang/hugoongithub/</link>
      <pubDate>Mon, 10 Dec 2018 22:47:58 +0300</pubDate>
      
      <guid>/post/golang/hugoongithub/</guid>
      <description>Разнесение кода и статических страниц в двух репозиториях 1. Создаем репозиторий и клонируем его
$ git clone https://github.com/vvuri/hugoblog.git   Ставим hugo Создаем новый сайт bash $ hugo new site hugoblog  Создаем первый пост bash $ cd vvuri $ hugo new post/start-new-blog.md  Правим контекст в /content/post/*.md
 Добаляем .gitignore
 Добавляем тему оформления
$ cd themes $ git clone https://github.com/azmelanar/hugo-theme-pixyll.git  правим файл config.toml
 Смотрим локально, что получилось localhosyt:8000</description>
    </item>
    
    <item>
      <title>Мельница на Нашем</title>
      <link>/post/hobby/melnica/</link>
      <pubDate>Mon, 10 Dec 2018 22:47:58 +0300</pubDate>
      
      <guid>/post/hobby/melnica/</guid>
      <description>Мельница - воздух Начинаю свой блог с группы Мельница.</description>
    </item>
    
    <item>
      <title>Debian</title>
      <link>/post/devops/debian/</link>
      <pubDate>Mon, 20 Nov 2017 23:27:56 +0300</pubDate>
      
      <guid>/post/devops/debian/</guid>
      <description>Архитектура и компоненты ПК $ less /proc/cpuinfo $ lscpu $ free $ dpkg --print-architecture - архитектура ПК  мониторинг всего: # netstat -lnp # dmsetup ls # lvdisplay # lsblk $ uptime - время работы и загрузка за последние 3 часа $ strace uptime - что вызывает вообще - можно ковырять софт # strace uptime 2&amp;gt;&amp;amp;1 | grep open - все открываемые файлы $ pstree - дерево процессов но без ID $ du -h -s /var/cache/apt/archives/ - SIZE dir  htop R — [running or runnable] запущенные или находятся в очереди на запуск S — [interruptible sleep] прерываемый сон D — [uninterruptible sleep] непрерываемый сон (в основном IO) Z — [zombie] процесс зомби, прекращенный, но не забранный родителем T — Остановленный сигналом управления заданиями t — Остановленный отладчиком X — Мёртвый (не должен показываться) детальней тут</description>
    </item>
    
    <item>
      <title>GIT</title>
      <link>/post/devops/gitlab/</link>
      <pubDate>Mon, 20 Nov 2017 23:27:56 +0300</pubDate>
      
      <guid>/post/devops/gitlab/</guid>
      <description>&lt;h4 id=&#34;git-gitlab&#34;&gt;GIT GITLAB&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ericdouglas.github.io/2016/04/01/Git-Useful-Tips/&#34;&gt;Git Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eax.me/git-commands/&#34;&gt;На русском часть команд&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Jenkins</title>
      <link>/post/devops/jenkins/</link>
      <pubDate>Mon, 20 Nov 2017 23:27:56 +0300</pubDate>
      
      <guid>/post/devops/jenkins/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Jenkins&lt;/strong&gt; - инструмент автоматизации. Бесплатен.
Groovy  в качестве встроенного языка сценариев.
Большое число plugin. Большое сообщество.
Расширяем, но требует Java VM для работы.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>/post/devops/markdown/</link>
      <pubDate>Sun, 16 Apr 2017 14:24:08 +0300</pubDate>
      
      <guid>/post/devops/markdown/</guid>
      <description>&lt;p&gt;Достаточно подробно &lt;a href=&#34;https://learn.getgrav.org/content/media&#34;&gt;https://learn.getgrav.org/content/media&lt;/a&gt;
описана так же шапка - это линки на папки и маршрутизация
отличный
редактор с двумя окнами под win free &lt;a href=&#34;http://markdownpad.com/&#34;&gt;http://markdownpad.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jasmine in Python</title>
      <link>/post/python/jasminepy/</link>
      <pubDate>Sun, 16 Apr 2017 14:19:23 +0300</pubDate>
      
      <guid>/post/python/jasminepy/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Jasmine&lt;/strong&gt; — фреймворк для описания тестов на JavaScript, обладающий простым BDD-синтаксисом и широкими возможностями. Jasmine самодостаточен, тесты, написанные при помощи этого фреймворка можно запустить под Node без каких-либо дополнительных ухищрений.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Get Start with Selenium</title>
      <link>/post/python/getstart-selenium/</link>
      <pubDate>Sat, 15 Apr 2017 01:09:08 +0300</pubDate>
      
      <guid>/post/python/getstart-selenium/</guid>
      <description> Selenium WebDrive first step in blog
code on Python:
def code(): m = 5 d = 6 if d &amp;lt; m: print(&amp;quot;Ok&amp;quot;)  </description>
    </item>
    
    <item>
      <title></title>
      <link>/post/qa/selenium-webdrive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/qa/selenium-webdrive/</guid>
      <description>Selenium WebDriver
 bash # pip install selenium рекомендуется virtualenv. Python 3.4 содержит модуль pyvenv Документация перевод Оригинальная документация Для Python
 Selenium server необходим в случаях, когда вы хотите использовать remote WebDriver
 Selenium server написан на языке Java. Для его запуска рекомендована среда Java Runtime Environment (JRE) версии 1.6 или выше. bash	java -jar selenium-server-standalone-2.x.x.jar
  Протсейший скрипт Python:
from selenium import webdriver from selenium.webdriver.common.keys import Keys // Класс Keys обеспечивает взаимодействие с командами клавиатуры driver = webdriver.</description>
    </item>
    
  </channel>
</rss>